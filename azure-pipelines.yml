trigger:
- main

pool:
  #vmImage: 'windows-latest' # üëà This tells Azure to use your self-hosted agent 
  name: Default   # üëà Uses your self-hosted agent

variables:
  buildConfiguration: 'Release'

stages:
# ----------------------------
# ‚úÖ STAGE 1: BUILD & PUBLISH
# ----------------------------
- stage: Build
  displayName: 'Build and Test'
  jobs:
    - job: BuildJob
      steps:
        # Use specific .NET SDK (change version as per your project)
        - task: UseDotNet@2
          inputs:
            packageType: 'sdk'
            version: '9.x'
            installationPath: $(Agent.ToolsDirectory)/dotnet

        # Checkout code
        - checkout: self

        # Restore dependencies
        - script: dotnet restore
          displayName: 'Restore NuGet Packages'

        # Build the solution
        - script: dotnet build --configuration $(buildConfiguration)
          displayName: 'Build the Application'

        # Run tests (if any)
        - script: dotnet test --no-restore --verbosity normal
          displayName: 'Run Unit Tests'

        # Publish app (output WebApp files to staging folder)
        - script: dotnet publish ./vkapi.csproj --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)
          displayName: 'Publish the Application'

        # Upload build artifacts (WebApp.zip for deployment)
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'

# ----------------------------
# ‚úÖ STAGE 2: DEPLOY TO DEV
# ----------------------------
- stage: DeployDev
  displayName: 'Deploy to Dev'
  dependsOn: Build
  condition: succeeded()
  jobs:
    - deployment: DevDeploy
      environment: 'dev'  # Create this environment in Azure DevOps
      strategy:
        runOnce:
          deploy:
            steps:
            - checkout: none
            - task: DownloadBuildArtifacts@0
              inputs:
                buildType: 'current'
                downloadType: 'single'
                artifactName: 'drop'
                downloadPath: '$(Pipeline.Workspace)'

                - task: AzureWebApp@1
                  inputs:
                    azureSubscription: 'DevOpsAzureService'  # Replace this
                    appType: 'webApp'
                    appName: 'vkapp2'             # Replace this
                    package: '$(Pipeline.Workspace)/drop'

# -----------------------------------
# üåê Stage 3: Deploy to QA (with approval)
# -----------------------------------
- stage: DeployQA
  displayName: 'Deploy to QA'
  dependsOn: DeployDev
  condition: succeeded()
  jobs:
    - deployment: QADeploy
      environment: 'qa'  # Create this environment in Azure DevOps
      strategy:
        runOnce:
          deploy:
            steps:
            - checkout: none
            - task: DownloadBuildArtifacts@0
              inputs:
                buildType: 'current'
                downloadType: 'single'
                artifactName: 'drop'
                downloadPath: '$(Pipeline.Workspace)'

          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'AzureRmServiceConnection'
              appType: 'webApp'
              appName: 'vkapp-qa'
              package: '$(Pipeline.Workspace)/drop'

# -----------------------------------
# üî• Stage 4: Deploy to Prod (with approval)
# -----------------------------------
- stage: DeployProd
  displayName: 'Deploy to Prod'
  dependsOn: DeployQA
  condition: succeeded()
  jobs:
    - deployment: ProdDeploy
      environment: 'prod'  # Create this environment in Azure DevOps
      strategy:
        runOnce:
          deploy:
            steps:
            - checkout: none
            - task: DownloadBuildArtifacts@0
              inputs:
                buildType: 'current'
                downloadType: 'single'
                artifactName: 'drop'
                downloadPath: '$(Pipeline.Workspace)'

          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'AzureRmServiceConnection'
              appType: 'webApp'
              appName: 'vkapp-prod'
              package: '$(Pipeline.Workspace)/drop'